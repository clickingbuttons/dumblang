import { print } from "std.debug"

enum Error { ArgNotFound }

fn main() void {
	// integers
	val: i32 = 1 + 1
	print("1 + 1 = {}\n", val)

	// floats
	val: f32 = 7.0 / 3.0
	print("7.0 / 3.0 = {}\n", val)

	// boolean
	print("{}\n{}\n{}\n",
		true && false,
		true || false,
		!true,
	)

	// optional
	optional_value: ?[]const u8 = null
	assert optional_value == null

	print(
		"\noptional 1\ntype: {}\nvalue: {?s}\n",
		@TypeOf(optional_value),
		optional_value,
	)

	optional_value = "hi"
	assert optional_value != null

	print(
		"\noptional 2\ntype: {}\nvalue: {?s}\n",
		@TypeOf(optional_value),
		optional_value,
	)

	// error union
	val: Error!i32 = Error.ArgNotFound

	print(
		"\nerror union 1\ntype: {}\nvalue: {!}\n",
		@TypeOf(val),
		val,
	)

	val = 1234

	print(
		"\nerror union 2\ntype: {}\nvalue: {!}\n",
		@TypeOf(val),
		val,
	)

	// closure
	fn closure(a) => a + 3

	print("\nclosure: {}\n", closure(4))
}
